// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextField /> should render 1`] = `
.c1 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-shadow: inset 0 0 0 1px #414cff;
  font-size: 1rem;
  border: 0;
  border-radius: 0;
  box-sizing: border-box;
  padding: 11px 10px;
  width: 100%;
}

.c0 {
  margin-bottom: 5px;
  color: black;
}

<ASCDefaultThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "ascTheme": Object {
          "colors": Object {
            "primary": "#414cff",
            "secondary": "#a86200",
          },
          "typography": Object {
            "primary": "AvenirNextLTW01-Regular\\", verdana, sans-serif",
            "secondary": "AvenirNextLTW01-Regular\\", verdana, sans-serif",
          },
        },
      }
    }
  >
    <TextField>
      <div>
        <styled.label
          error={false}
        >
          <StyledComponent
            error={false}
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  Object {
                    "type": "text",
                  },
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  margin-bottom:5px;
  color: ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "styled.label",
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "label",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <label
              className="c0"
              type="text"
            >
              Label!
            </label>
          </StyledComponent>
        </styled.label>
        <styled.input>
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  Object {
                    "type": "text",
                  },
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  appearance: none;
  box-shadow: inset 0 0 0 1px ",
                    [Function],
                    ";
  font-size: 1rem;
  border: 0;
  border-radius: 0;
  box-sizing: border-box;
  padding: 11px 10px;
  width: 100%;
",
                  ],
                },
                "displayName": "styled.input",
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <input
              className="c1"
              type="text"
            />
          </StyledComponent>
        </styled.input>
      </div>
    </TextField>
  </ThemeProvider>
</ASCDefaultThemeProvider>
`;
