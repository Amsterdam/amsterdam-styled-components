// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Styled components should render buttons 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 5px;
}

.c0 > * {
  margin-right: 5px;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: none;
  color: #fff;
  cursor: pointer;
  font-size: 16px;
  font-weight: normal;
  background: #004699;
  background-size: 100% 50%;
  background-repeat: no-repeat;
  padding: 0 10px 0 10px;
  min-height: 38px;
  line-height: 1em;
  padding: 0 10px 0 10px;
  -webkit-transition: color 0.1s ease-in-out,background-color 0.1s ease-in-out;
  transition: color 0.1s ease-in-out,background-color 0.1s ease-in-out;
}

.c1:hover {
  background: #00387a;
  background-size: 100% 50%;
  background-repeat: no-repeat;
}

.c1:focus {
  outline-color: #FEC813;
  outline-style: solid;
  outline-width: medium;
}

.c1 > svg rect,
.c1 > svg polygon,
.c1 > svg path {
  fill: #fff;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  border: none;
  color: #fff;
  cursor: pointer;
  font-size: 16px;
  font-weight: normal;
  background: #ec0000;
  background-size: 100% 50%;
  background-repeat: no-repeat;
  padding: 0 10px 0 10px;
  min-height: 38px;
  line-height: 1em;
  padding: 0 10px 0 10px;
  -webkit-transition: color 0.1s ease-in-out,background-color 0.1s ease-in-out;
  transition: color 0.1s ease-in-out,background-color 0.1s ease-in-out;
}

.c2:hover {
  background: #bc0000;
  background-size: 100% 50%;
  background-repeat: no-repeat;
}

.c2:focus {
  outline-color: #FEC813;
  outline-style: solid;
  outline-width: medium;
}

.c2 > svg rect,
.c2 > svg polygon,
.c2 > svg path {
  fill: #fff;
}

<ASCDefaultThemeProvider>
  <ThemeProvider
    theme={
      Object {
        "ascTheme": Object {
          "colors": Object {
            "bright": Object {
              "main": "#ffffff",
            },
            "error": Object {
              "main": "#ec0000",
            },
            "primary": Object {
              "dark": "#00387a",
              "main": "#004699",
            },
            "secondary": Object {
              "dark": "#bc0000",
              "main": "#ec0000",
            },
            "support": Object {
              "focus": "#FEC813",
              "invalid": "#EC0000",
              "valid": "#00A03C",
            },
            "tint": Object {
              "level1": "#ffffff",
              "level2": "#F5F5F5",
              "level3": "#E6E6E6",
              "level4": "#B4B4B4",
              "level5": "#767676",
              "level6": "#323232",
              "level7": "#000000",
            },
          },
          "globalStyle": "",
          "typography": Object {
            "a": Object {
              "color": "#000000",
              "fontFamily": "inherit",
              "fontSize": "1rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1,
            },
            "fontFamily": "AvenirNextLTW01-Regular, verdana, sans-serif",
            "fontSize": "16px",
            "fontWeightHeavy": 900,
            "fontWeightLight": 300,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "color": "#000000",
              "fontFamily": "inherit",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1,
            },
            "h2": Object {
              "color": "#000000",
              "fontFamily": "inherit",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1,
            },
            "h3": Object {
              "color": "#000000",
              "fontFamily": "inherit",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1,
            },
            "h4": Object {
              "color": "#000000",
              "fontFamily": "inherit",
              "fontSize": Array [
                "
      ",
                "1.125rem",
                "
    ",
              ],
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1,
            },
            "h5": Object {
              "color": "#000000",
              "fontFamily": "inherit",
              "fontSize": Array [
                "
      ",
                "1.125rem",
                "
    ",
              ],
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1,
            },
            "h6": Object {
              "color": "#000000",
              "fontFamily": "inherit",
              "fontSize": "6rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1,
            },
            "p": Object {
              "color": "#000000",
              "fontFamily": "inherit",
              "fontSize": "1rem",
              "fontWeight": 300,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.25,
            },
          },
        },
      }
    }
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-EHOje",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: flex;
  padding: 5px;

  & > * {
    margin-right: 5px;
  }
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-EHOje",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0"
        >
          <Button
            color="primary"
          >
            <styled.button
              color="primary"
            >
              <StyledComponent
                color="primary"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-iwsKbI",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  border: none;
  color: ",
                        [Function],
                        ";
  cursor: pointer;
  font-size: 16px;
  font-weight: normal;
  background: ",
                        [Function],
                        ";
  background-size: 100% 50%;
  background-repeat: no-repeat;
  padding: 0 10px 0 10px;
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
  ",
                        "transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out;",
                        ";

  &:hover {
    background: ",
                        [Function],
                        ";
    background-size: 100% 50%;
    background-repeat: no-repeat;
  }
  
  ",
                        [Function],
                        "
  
  & > svg {
    rect,
    polygon,
    path {
      fill: ",
                        [Function],
                        ";
    } 
  }
",
                      ],
                    },
                    "displayName": "styled.button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-iwsKbI",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <button
                  className="c1"
                  color="primary"
                >
                  <span>
                    Hello
                  </span>
                </button>
              </StyledComponent>
            </styled.button>
          </Button>
          <Button
            color="secondary"
          >
            <styled.button
              color="secondary"
            >
              <StyledComponent
                color="secondary"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-iwsKbI",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  border: none;
  color: ",
                        [Function],
                        ";
  cursor: pointer;
  font-size: 16px;
  font-weight: normal;
  background: ",
                        [Function],
                        ";
  background-size: 100% 50%;
  background-repeat: no-repeat;
  padding: 0 10px 0 10px;
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
  ",
                        [Function],
                        "
  ",
                        "transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out;",
                        ";

  &:hover {
    background: ",
                        [Function],
                        ";
    background-size: 100% 50%;
    background-repeat: no-repeat;
  }
  
  ",
                        [Function],
                        "
  
  & > svg {
    rect,
    polygon,
    path {
      fill: ",
                        [Function],
                        ";
    } 
  }
",
                      ],
                    },
                    "displayName": "styled.button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-iwsKbI",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <button
                  className="c2"
                  color="secondary"
                >
                  <span>
                    World
                  </span>
                </button>
              </StyledComponent>
            </styled.button>
          </Button>
        </div>
      </StyledComponent>
    </styled.div>
  </ThemeProvider>
</ASCDefaultThemeProvider>
`;
